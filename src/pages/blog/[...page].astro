---
import type { Page, PaginateFunction } from 'astro'
import type { CollectionEntry } from 'astro:content'
import { getCollection } from 'astro:content'
import { PAGE_SIZE } from '../../config'
import Base from '../../layouts/base.astro'
import PageHero from '../../components/pagehero.astro'
import BlogRoll from '../../components/blogroll.astro'
import PaginateControl from '../../components/paginatecontrol.astro'
import image from '../../assets/images/blog.jpg'

export interface Props {
  page: Page<CollectionEntry<'blog'>>
}

const { page } = Astro.props

const frontmatter: CollectionEntry<'page'>['data'] = {
  title:
    'Blog' +
    (page.size < page.total ? ' (page ' + page.currentPage + ' of ' + page.lastPage + ')' : ''),
  description: 'View our articles.',
  image: image
}

const currentPage = Astro.url.pathname.replace(/(\/\d*)?\/$/, '')
export async function getStaticPaths({ paginate }: { paginate: PaginateFunction }) {
  const allPosts = await getCollection('blog', ({ data }) => {
    return data.draft !== true
  })
  const posts = allPosts.sort((a, b) =>
    a.data.pubDate && b.data.pubDate ? +b.data.pubDate - +a.data.pubDate : 0
  )

  return paginate(posts, { pageSize: PAGE_SIZE })
}
---

<Base frontmatter={frontmatter}>
  <header>
    <PageHero title={frontmatter.title!} description={frontmatter.description} {image}>
      <PaginateControl base={currentPage} page={page} />
    </PageHero>
  </header>
  <main class='mt-10 bg-gray-100 dark:bg-gray-900'>
    <BlogRoll posts={page.data} />
  </main>
</Base>
